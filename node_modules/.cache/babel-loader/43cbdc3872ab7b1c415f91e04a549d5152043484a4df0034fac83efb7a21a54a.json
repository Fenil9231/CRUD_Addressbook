{"ast":null,"code":"var _jsxFileName = \"/home/fenil/git_Repos/React_Pro_(Group_Code)/context_app/src/components/login.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://address-book-0wtp.onrender.com\";\nexport const Login = () => {\n  _s();\n  const idRef = useRef(null);\n  const passRef = useRef(null);\n  const navigate = useNavigate();\n  const isLoggedIn = getIsLoggedInFlag();\n\n  // Todo - If already logged in - then redirect to /members\n  // dont show login page.\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/${TAB_IDS.MEMBERS}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  const doLogin = () => {\n    var raw = JSON.stringify({\n      \"phoneNumber\": idRef.current.value,\n      \"password\": passRef.current.value\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: raw\n    };\n    fetch(`${url}/login/v1`, requestOptions).then(r => {\n      console.log(' r in 1st then ', r);\n      if (r.status >= 200 && r.status <= 299) {\n        return r.json();\n      } else {\n        throw 'Something went wrong';\n      }\n    }).then(r => {\n      console.log('login response ', r);\n      setAuthHeaders(r.phoneNumber, r.loginToken);\n      navigate(`/${TAB_IDS.MEMBERS}`);\n      window.location.href = '/'; // This is hack.. need to do bcz there is no centralised state.. Fix this\n    }).catch(error => {\n      // handle error by your self\n      console.log('error', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: idRef,\n        type: \"text\",\n        placeholder: \"enter phone number here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: passRef,\n        type: \"password\",\n        placeholder: \"enter password here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: doLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"CUyfqAiaqgRcfQ0j8kZPRj490tk=\", true);\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","url","Login","_s","idRef","useRef","passRef","navigate","useNavigate","isLoggedIn","getIsLoggedInFlag","Navigate","to","TAB_IDS","MEMBERS","fileName","_jsxFileName","lineNumber","columnNumber","doLogin","raw","JSON","stringify","current","value","requestOptions","method","headers","body","fetch","then","r","console","log","status","json","setAuthHeaders","phoneNumber","loginToken","window","location","href","catch","error","className","children","ref","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/fenil/git_Repos/React_Pro_(Group_Code)/context_app/src/components/login.jsx"],"sourcesContent":["import {useState } from \"react\";\r\n  \r\nconst url = \"https://address-book-0wtp.onrender.com\"\r\nexport const Login = () => {\r\n  const idRef = useRef(null);\r\n  const passRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const isLoggedIn = getIsLoggedInFlag();\r\n\r\n  // Todo - If already logged in - then redirect to /members\r\n  // dont show login page.\r\n  if (isLoggedIn) {\r\n    return <Navigate to={`/${TAB_IDS.MEMBERS}`}/>\r\n  }\r\n\r\n  const doLogin = () => {\r\n    var raw = JSON.stringify({\r\n      \"phoneNumber\": idRef.current.value,\r\n      \"password\": passRef.current.value\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n      },\r\n      body: raw\r\n    };\r\n\r\n    fetch(`${url}/login/v1`, requestOptions)\r\n      .then(r => \r\n        \r\n        {\r\n          console.log(' r in 1st then ', r);\r\n          if (r.status >= 200 && r.status <= 299) {\r\n              return r.json();\r\n          } else {\r\n              throw ('Something went wrong');\r\n          }\r\n        }  \r\n      )\r\n      .then(r => {\r\n        console.log('login response ', r);\r\n        setAuthHeaders(r.phoneNumber, r.loginToken);\r\n        navigate(`/${TAB_IDS.MEMBERS}`);\r\n        window.location.href = '/'; // This is hack.. need to do bcz there is no centralised state.. Fix this\r\n      })\r\n      .catch(error => {\r\n          // handle error by your self\r\n          console.log('error', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <div>\r\n          <input ref={idRef} type='text' placeholder='enter phone number here' />\r\n          &nbsp;&nbsp;&nbsp;\r\n          <input ref={passRef} type='password' placeholder='enter password here' />\r\n        </div>\r\n        <br />\r\n        <button type='button' onClick={doLogin}>Login</button>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}