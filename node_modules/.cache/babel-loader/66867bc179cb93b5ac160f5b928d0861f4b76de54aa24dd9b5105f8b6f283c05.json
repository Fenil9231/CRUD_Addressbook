{"ast":null,"code":"var _jsxFileName = \"/home/fenil/git_Repos/React_Pro_(Group_Code)/context_app/src/components/login.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport { TAB_IDS } from \"../../constants/general\";\nimport { getIsLoggedInFlag, setAuthHeaders } from \"../../helpers/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const idRef = useRef(null);\n  const passRef = useRef(null);\n  const navigate = useNavigate();\n  const isLoggedIn = getIsLoggedInFlag();\n\n  // Todo - If already logged in - then redirect to /members\n  // dont show login page.\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/${TAB_IDS.MEMBERS}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, this);\n  }\n  const doLogin = () => {\n    var raw = JSON.stringify({\n      \"phoneNumber\": idRef.current.value,\n      \"password\": passRef.current.value\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: raw\n    };\n    fetch(`https://t1m-addressbook-service.onrender.com/login/v1`, requestOptions).then(response => response.json()).then(r => {\n      console.log('login response ', r);\n      setAuthHeaders(r.phoneNumber, r.loginToken);\n      navigate(`/${TAB_IDS.MEMBERS}`);\n      window.location.reload(); // This is hack.. need to do bcz there is no centralised state.. Fix this\n    }).catch(error => {\n      // handle error by your self\n      console.log('error', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: idRef,\n        type: \"text\",\n        placeholder: \"enter phone number here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: passRef,\n        type: \"password\",\n        placeholder: \"enter password here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: doLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(Login, \"CUyfqAiaqgRcfQ0j8kZPRj490tk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","useNavigate","Navigate","TAB_IDS","getIsLoggedInFlag","setAuthHeaders","jsxDEV","_jsxDEV","Login","_s","idRef","passRef","navigate","isLoggedIn","to","MEMBERS","fileName","_jsxFileName","lineNumber","columnNumber","doLogin","raw","JSON","stringify","current","value","requestOptions","method","headers","body","fetch","then","response","json","r","console","log","phoneNumber","loginToken","window","location","reload","catch","error","className","children","ref","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/fenil/git_Repos/React_Pro_(Group_Code)/context_app/src/components/login.jsx"],"sourcesContent":["import { useRef } from \"react\";\r\nimport { useNavigate, Navigate } from \"react-router-dom\";\r\nimport { TAB_IDS } from \"../../constants/general\";\r\nimport { getIsLoggedInFlag, setAuthHeaders } from \"../../helpers/auth\";\r\n\r\nexport const Login = () => {  \r\n    const idRef = useRef(null);\r\n    const passRef = useRef(null);\r\n    const navigate = useNavigate();\r\n    const isLoggedIn = getIsLoggedInFlag();\r\n\r\n    // Todo - If already logged in - then redirect to /members\r\n    // dont show login page.\r\n    if (isLoggedIn) {\r\n      return <Navigate to={`/${TAB_IDS.MEMBERS}`}/>\r\n    }\r\n\r\n    const doLogin = () => {\r\n      var raw = JSON.stringify({\r\n        \"phoneNumber\": idRef.current.value,\r\n        \"password\": passRef.current.value\r\n      });\r\n\r\n      var requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n        },\r\n        body: raw\r\n      };\r\n\r\n      fetch(`https://t1m-addressbook-service.onrender.com/login/v1`, requestOptions)\r\n        .then(response => response.json())\r\n        .then(r => {\r\n          console.log('login response ', r);\r\n          setAuthHeaders(r.phoneNumber, r.loginToken);\r\n          navigate(`/${TAB_IDS.MEMBERS}`);\r\n          window.location.reload(); // This is hack.. need to do bcz there is no centralised state.. Fix this\r\n        })\r\n        .catch(error => {\r\n            // handle error by your self\r\n            console.log('error', error);\r\n        });\r\n    };\r\n\r\n    return (\r\n      <div className=\"App\">\r\n          <div>\r\n            <input ref={idRef} type='text' placeholder='enter phone number here' />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <input ref={passRef} type='password' placeholder='enter password here' />\r\n          </div>\r\n          <br />\r\n          <button type='button' onClick={doLogin}>Login</button>\r\n      </div>\r\n    );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}